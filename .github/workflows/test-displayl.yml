name: Test Display

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check-display-linux:
    name: Linux Display Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          - ubuntu-latest
          - ubuntu-24.04
          - ubuntu-22.04
          - ubuntu-24.04-arm
          - ubuntu-22.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if display is available on Linux
        run: |
          # count=$(xrandr --listmonitors 2>/dev/null | tail -n +2 | wc -l)
          # if [ "$count" -gt 0 ]; then
          #     echo "Display: YES"
          #     echo "Display Count: $count"
          # else
          #     echo "Display: NO"
          #     echo "Display Count: 0"
          # fi
          if [ -n "$DISPLAY" ] || [ -n "$WAYLAND_DISPLAY" ]; then
            echo "Display available"
          else
            echo "No display (headless only)"
          fi
          xset q > /dev/null 2>&1 && echo "Display OK" || echo "No display"

  check-display-windows:
    name: Windows Display Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          - windows-latest
          - windows-2025
          - windows-2022
          - windows-11-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Check active Windows displays
        shell: powershell
        run: |
          # $monitors = (Get-WmiObject WmiMonitorID -Namespace root\wmi).Active
          # $active = Get-WmiObject WmiMonitorID -Namespace root\wmi | Measure-Object | Select-Object -ExpandProperty Count
          # Write-Host "Active Display Count: $active"
          # Get-Process -Name explorer -ErrorAction SilentlyContinue
          $session = $env:SESSIONNAME
          if ($session -eq "Console") {
            Write-Host "Display available"
          } else {
            Write-Host "No display (headless only)"
          }

          

  check-display-macos:
    name: macOS Display Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          - macos-latest
          - macos-26
          - macos-15
          - macos-15-intel
          - macos-14
          - macos-13
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check if display is available on macOS
        run: | 
          # count=$(system_profiler SPDisplaysDataType | grep "Resolution" | wc -l)
          # if [ "$count" -gt 0 ]; then
          #   echo "Display: YES"
          #   echo "Display Count: $count"
          # else 
          #   echo "Display: NO"
          #   echo "Display Count: 0"
          # fi
          # pgrep -qx loginwindow && echo "GUI session is active." || echo "GUI session is not active."
          count=$(system_profiler SPDisplaysDataType | grep "Resolution" | wc -l)
          if [ "$count" -gt 0 ]; then
            echo "Display available"
          else
            echo "No display (headless only)"
          fi
          if [ -n "$DISPLAY" ]; then
            echo "Display available"
          else
            echo "No display"
          fi
          system_profiler SPDisplaysDataType


          
