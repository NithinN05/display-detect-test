name: Test Display

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check-display-linux:
    name: Linux Display Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if display is available on Linux
        run: |
          count=$(xrandr --listmonitors 2>/dev/null | tail -n +2 | wc -l)
          if [ "$count" -gt 0 ]; then
              echo "Display: YES"
              echo "Display Count: $count"
          else
              echo "Display: NO"
              echo "Display Count: 0"
          fi


  check-display-windows:
    name: Windows Display Check
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Check active Windows displays
        shell: powershell
        run: |
          $monitors = (Get-WmiObject WmiMonitorID -Namespace root\wmi).Active
          $active = Get-WmiObject WmiMonitorID -Namespace root\wmi | Measure-Object | Select-Object -ExpandProperty Count
          Write-Host "Active Display Count: $active"
          (Get-WmiObject WmiMonitorID -Namespace root\wmi).Active


  check-display-macos:
    name: macOS Display Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          - macos-latest
          - macos-26
          - macos-16
          - macos-15
          - macos-15-intel
          - macos-14
          - macos-13
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check if display is available on macOS
        run: | 
          count=$(system_profiler SPDisplaysDataType | grep "Resolution" | wc -l)
          if [ "$count" -gt 0 ]; then
            echo "Display: YES"
            echo "Display Count: $count"
          else 
            echo "Display: NO"
            echo "Display Count: 0"
          fi
          launchctl managername
