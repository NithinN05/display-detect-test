name: Test Display

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check-display-linux:
    name: Linux Display Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if display is available on Linux
        run: |
          if [ -n "$DISPLAY" ] || [ -n "$WAYLAND_DISPLAY" ]; then
            echo "Display: YES"
            # Try counting connected displays
            count=$(xrandr --listmonitors 2>/dev/null | tail -n +2 | wc -l)
            echo "Display Count: ${count:-1}"
          else
            echo "Display: NO"
            echo "Display Count: 0"
          fi

  check-display-windows:
    name: Windows Display Check
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if display is available on Windows
        shell: powershell
        run: |
          if ($env:SESSIONNAME -eq "Console") {
            Write-Host "Display: YES"
            $count = (Get-CimInstance Win32_DesktopMonitor | Where-Object { $_.Availability -ne $null }).Count
            Write-Host "Display Count: $count"
          } else {
            Write-Host "Display: NO"
            Write-Host "Display Count: 0"
          }

  check-display-macos:
    name: macOS Display Check
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if display is available on macOS
        run: |
          count=$(system_profiler SPDisplaysDataType | grep "Resolution" | wc -l)
          if [ "$count" -gt 0 ]; then
            echo "Display: YES"
            echo "Display Count: $count"
          else
            echo "Display: NO"
            echo "Display Count: 0"
          fi
